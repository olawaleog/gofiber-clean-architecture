Test ID,Module,Test Case,Description,Prerequisites,Test Steps,Expected Result,Actual Result,Status,Priority,Notes
AUTH-001,Authentication,User Registration - Customer,Test customer registration functionality with valid data,None,"1. Send POST request to /v1/api/register-customer
2. Provide valid user data (username, password, email, phone, etc.)
3. Check response","1. Status code 200
2. Success message
3. User created in database
4. Role set as CUSTOMER",,High,Test both NG (+234) and GH (+233) country codes
AUTH-002,Authentication,User Registration - Invalid Data,Test registration with invalid/missing data,None,"1. Send POST request to /v1/api/register-customer
2. Provide invalid/incomplete data
3. Check response","1. Status code 400
2. Appropriate error message
3. Validation errors returned",,High,Test various invalid scenarios
AUTH-003,Authentication,User Login,Test user authentication with valid credentials,Registered user exists,"1. Send POST request to /v1/api/authentication
2. Provide valid username/password
3. Check response","1. Status code 200
2. JWT token returned
3. User details returned",,High,
AUTH-004,Authentication,User Login - Invalid Credentials,Test authentication with invalid credentials,None,"1. Send POST request to /v1/api/authentication
2. Provide invalid username/password
3. Check response","1. Status code 401
2. Error message
3. No token returned",,High,
AUTH-005,Authentication,Password Reset Request,Test password reset functionality,Registered user exists,"1. Send POST request to /v1/api/reset-password
2. Provide valid email/phone
3. Check response","1. Status code 200
2. OTP sent to user
3. Success message",,Medium,
AUTH-006,Authentication,OTP Validation,Test OTP validation for password reset,Password reset initiated,"1. Send POST request to /v1/api/verify-otp
2. Provide valid OTP
3. Check response","1. Status code 200
2. OTP validated
3. Success message",,Medium,
AUTH-007,Authentication,New Password Update,Test setting new password after reset,OTP validated,"1. Send POST request to /v1/api/post-new-password
2. Provide new password
3. Check response","1. Status code 200
2. Password updated
3. Success message",,Medium,
PROF-001,User Profile,Update Profile,Test profile update functionality,User authenticated,"1. Send POST request to /v1/api/update-profile
2. Provide updated user data
3. Check response","1. Status code 200
2. Profile updated
3. Success message",,Medium,
PROF-002,User Profile,Change Password,Test password change functionality,User authenticated,"1. Send POST request to /v1/api/change-password
2. Provide old and new password
3. Check response","1. Status code 200
2. Password changed
3. Success message",,Medium,
ADDR-001,Address Management,Save Address,Test saving new address,User authenticated,"1. Send POST request to /v1/api/save-address
2. Provide address details
3. Check response","1. Status code 200
2. Address saved
3. Success message",,Medium,
ADDR-002,Address Management,Get Addresses,Test retrieving user addresses,User authenticated with saved addresses,"1. Send GET request to /v1/api/get-addresses
2. Check response","1. Status code 200
2. List of addresses returned",,Medium,
FCM-001,Notifications,Update FCM Token,Test FCM token update,User authenticated,"1. Send POST request to /v1/api/update-fcm-token
2. Provide new FCM token
3. Check response","1. Status code 200
2. Token updated
3. Success message",,Low,
ADMIN-001,Admin Functions,List Users,Test retrieving user list,Admin user authenticated,"1. Send GET request to /v1/api/users
2. Check response","1. Status code 200
2. List of users returned",,High,Only accessible by admin
ADMIN-002,Admin Functions,Get User by ID,Test retrieving specific user,Admin user authenticated,"1. Send GET request to /v1/api/users/{id}
2. Check response","1. Status code 200
2. User details returned",,High,Test with valid and invalid IDs
ADMIN-003,Admin Functions,Update User,Test updating user details,Admin user authenticated,"1. Send PUT request to /v1/api/users/{id}
2. Provide updated user data
3. Check response","1. Status code 200
2. User updated
3. Success message",,High,Test permission checks
SEC-001,Security,JWT Validation,Test JWT token validation,None,"1. Send requests with invalid/expired tokens
2. Check responses","1. Status code 401
2. Authentication error",,High,Test various token scenarios
SEC-002,Security,Role-Based Access,Test role-based access control,Users with different roles exist,"1. Attempt accessing admin endpoints with non-admin user
2. Check responses","1. Status code 403
2. Access denied message",,High,Test all protected endpoints
PERF-001,Performance,Concurrent Users,Test system under concurrent user load,System running with test data,"1. Simulate 100 concurrent users
2. Monitor response times
3. Check error rates","1. Response time < 1s
2. Error rate < 1%
3. No system crashes",,Medium,Load testing
ERR-001,Error Handling,Invalid Routes,Test handling of invalid routes,None,"1. Send requests to non-existent endpoints
2. Check responses","1. Status code 404
2. Appropriate error message",,Low,
ERR-002,Error Handling,Server Errors,Test handling of internal errors,None,"1. Trigger various error conditions
2. Check error responses","1. Status code 500
2. Error details logged
3. Generic error returned",,Medium,Test various error scenarios
